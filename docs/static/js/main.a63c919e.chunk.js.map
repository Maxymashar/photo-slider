{"version":3,"sources":["components/ImageCard.jsx","components/Slider.jsx","components/SearchForm.jsx","components/App.jsx","index.js"],"names":["CardImage","src","name","makeStyles","root","width","flex","overflow","image","height","objectFit","objectPosition","borderBottomRightRadius","borderBottomLeftRadius","transition","transform","className","alt","Skeleton","variant","animation","CardHeader","pName","handleRemove","display","alignItems","padding","justifyContent","background","borderTopLeftRadius","borderTopRightRadius","fontFamily","fontSize","fontWeight","marginLeft","avatar","color","deepPurple","Avatar","toUpperCase","ImageCard","id","theme","flexDirection","boxShadow","borderRadius","marginRight","axios","require","default","initialState","number","array","i","push","Math","random","getEmptyImages","wrapperRef","currentImageIndex","getWidth","getTransformationDistance","SliderWrapper","children","useRef","useEffect","current","style","Array","length","ref","ControlButton","direction","clickHandler","disabled","position","top","zIndex","left","right","Fab","clsx","onClick","ArrowBack","ArrowForward","SliderWindow","outline","Slider","query","console","log","useState","images","setImages","setDisabled","get","params","per_page","headers","Authorization","then","res","data","photos","map","photographer","key","large","catch","e","error","_id","filter","SearchForm","onChangeQuery","textFieldRef","margin","TextField","placeholder","Button","value","querySelector","trim","App","setQuery","document","getElementById","render"],"mappings":"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","file":"static/js/main.a63c919e.chunk.js","sourcesContent":["import { Avatar, Button, makeStyles } from '@material-ui/core';\nimport { deepPurple } from '@material-ui/core/colors';\nimport { Skeleton } from '@material-ui/lab';\n\nconst CardAction = ({ handleRemove }) => {\n  const { root } = makeStyles({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n    },\n  })();\n  return (\n    <div className={root}>\n      <Button color='primary' variant='text' onClick={handleRemove}>\n        Remove\n      </Button>\n    </div>\n  );\n};\n\nconst CardImage = ({ src, name }) => {\n  const { root, image } = makeStyles({\n    root: {\n      width: '100%',\n      flex: 1,\n      overflow: 'hidden',\n    },\n    image: {\n      width: '100%',\n      height: '100%',\n      objectFit: 'cover',\n      objectPosition: 'center',\n      borderBottomRightRadius: 4,\n      borderBottomLeftRadius: 4,\n      transition: 'transform 500ms ease',\n      '&:hover': {\n        transform: 'scale(1.2)',\n      },\n    },\n  })();\n  return (\n    <div className={root}>\n      {src ? (\n        <img src={src} alt={name} className={image} />\n      ) : (\n        <Skeleton variant='rect' animation='wave' width='100%' height='100%' />\n      )}\n    </div>\n  );\n};\n\nconst CardHeader = ({ pName, handleRemove }) => {\n  const { root, avatar } = makeStyles({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: '8px',\n      justifyContent: 'space-between',\n      background: '#f2f2f2',\n      borderTopLeftRadius: 4,\n      borderTopRightRadius: 4,\n    },\n    name: {\n      fontFamily: 'Roboto',\n      fontSize: '1rem',\n      fontWeight: '400',\n      marginLeft: '16px',\n    },\n    avatar: {\n      color: '#fff',\n      background: deepPurple[400],\n    },\n  })();\n  return (\n    <div className={root}>\n      <Avatar className={avatar}>{pName[0].toUpperCase()}</Avatar>\n      {/* <CardAction handleRemove={handleRemove} /> */}\n    </div>\n  );\n};\n\nconst ImageCard = ({ src, name, handleRemove, id }) => {\n  const { root } = makeStyles((theme) => ({\n    root: {\n      display: 'inline-flex',\n      flexDirection: 'column',\n      width: 250,\n      height: '100%',\n      boxShadow: '2px 2px 4px #f2f2f2 ,-2px -2px 4px #f2f2f2',\n      borderRadius: 6,\n      marginLeft: 4,\n      marginRight: 4,\n      '&:first-child': {\n        marginLeft: 8,\n        marginRight: 4,\n      },\n      '&:last-child': {\n        marginRight: 8,\n        marginLeft: 4,\n      },\n      '&:only-child': {\n        marginRight: 8,\n        marginLeft: 8,\n      },\n    },\n  }))();\n\n  return (\n    <div className={root}>\n      <CardHeader\n        pName={name}\n        handleRemove={() => {\n          handleRemove(id);\n        }}\n      />\n      <CardImage src={src} name={name} />\n    </div>\n  );\n};\n\nexport { ImageCard };\n","import { makeStyles } from '@material-ui/core';\nimport { Fab } from '@material-ui/core';\nimport { ArrowBack, ArrowForward } from '@material-ui/icons';\nimport { ImageCard } from './ImageCard';\nimport { useRef, useEffect, useState } from 'react';\nimport clsx from 'clsx';\n\nconst axios = require('axios').default;\n\nfunction getEmptyImages(number) {\n  const array = [];\n  for (let i = 0; i < number; i++) {\n    array.push({ id: Math.random(), name: 'N', src: null });\n  }\n  return array;\n}\n// The state\nconst initialState = getEmptyImages(20);\n\n// The wrapper ref\nlet wrapperRef = null;\n\n// the images shown at at time\nconst slidesPerWindow = 3;\n\n// The current image index\nlet currentImageIndex = 0;\n\n// the slides moving at a time\nlet slidesMoving = 1;\n\n// get the width of the wrapper\nfunction getWidth(number) {\n  // number = number < 1 ? 1 : number;\n  const sliderWidth = 250;\n  return (number + 1) * 8 + number * sliderWidth;\n}\n\nfunction getTransformationDistance(number) {\n  return number * 258;\n}\n\nconst SliderWrapper = ({ children }) => {\n  wrapperRef = useRef();\n\n  useEffect(() => {\n    wrapperRef.current.style.width = `${\n      children instanceof Array ? getWidth(children.length) : getWidth(1)\n    }px`;\n  }, [children]);\n\n  const { root } = makeStyles({\n    root: {\n      height: '100%',\n      // outline: '2px solid black',\n      padding: '16px 0px',\n      transition: 'transform 500ms ease',\n    },\n  })();\n  return (\n    <div ref={wrapperRef} className={root}>\n      {children}\n    </div>\n  );\n};\n\nconst ControlButton = ({ direction, clickHandler, disabled }) => {\n  const { root, left, right } = makeStyles({\n    root: {\n      position: 'absolute',\n      top: 'calc(50% - 28px)',\n      zIndex: 100,\n    },\n    left: {\n      left: 16,\n    },\n    right: {\n      right: 16,\n    },\n  })();\n\n  return (\n    <Fab\n      className={direction === 'back' ? clsx(root, left) : clsx(root, right)}\n      onClick={clickHandler}\n      disabled={disabled}\n    >\n      {direction === 'back' ? <ArrowBack /> : <ArrowForward />}\n    </Fab>\n  );\n};\n\nconst SliderWindow = ({ children }) => {\n  const { root } = makeStyles({\n    root: {\n      width: getWidth(slidesPerWindow),\n      height: 350,\n      outline: '2px solid blue',\n      position: 'relative',\n      overflow: 'hidden',\n    },\n  })();\n\n  return <div className={root}>{children}</div>;\n};\n\nconst Slider = ({ query }) => {\n  console.log('Slider Rendered', query);\n  // The state\n  const [images, setImages] = useState(initialState);\n  // The API KEY\n  const API_KEY = '563492ad6f91700001000001b7702f4246d94a279d5fa6bed1b7182e';\n  const BASE_URL = 'https://api.pexels.com/v1/search';\n\n  // disabled state [backward,foward]\n  const [disabled, setDisabled] = useState([false, false]);\n\n  useEffect(() => {\n    console.log('useEffect Running');\n\n    // reset the currentImageIndex if the query changes\n    currentImageIndex = 0;\n    wrapperRef.current.style.transform = 'translateX(0px)';\n\n    if (currentImageIndex === 0) {\n      setDisabled([true, false]);\n    }\n\n    if (currentImageIndex === images.length - slidesPerWindow) {\n      setDisabled([true, false]);\n    }\n    axios\n      .get(BASE_URL, {\n        params: { query: query, per_page: 20 },\n        headers: { Authorization: API_KEY },\n      })\n      .then((res) => {\n        setImages(\n          res.data.photos.map(({ photographer, id, src: { large } }) => ({\n            name: photographer,\n            id: id,\n            key: id,\n            src: large,\n          }))\n        );\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  }, [query]);\n\n  const handleRemove = (_id) => {\n    setImages(images.filter(({ id }) => id !== _id));\n  };\n\n  const moveBack = () => {\n    if (currentImageIndex === 1) {\n      setDisabled([true, false]);\n    } else {\n      setDisabled([false, false]);\n    }\n\n    currentImageIndex -= slidesMoving;\n    wrapperRef.current.style.transform = `translateX(-${getTransformationDistance(\n      currentImageIndex\n    )}px)`;\n  };\n\n  const moveFoward = () => {\n    if (currentImageIndex === images.length - 1 - slidesPerWindow) {\n      setDisabled([false, true]);\n    } else {\n      setDisabled([false, false]);\n    }\n\n    currentImageIndex += slidesMoving;\n    wrapperRef.current.style.transform = `translateX(-${getTransformationDistance(\n      currentImageIndex\n    )}px)`;\n    console.log(wrapperRef.current);\n  };\n\n  return (\n    <>\n      <SliderWindow>\n        <ControlButton\n          direction='back'\n          clickHandler={moveBack}\n          disabled={disabled[0]}\n        />\n        <SliderWrapper>\n          {images.map(({ id, name, src }) => (\n            <ImageCard\n              src={src}\n              name={name}\n              id={id}\n              key={id}\n              handleRemove={handleRemove}\n            />\n          ))}\n        </SliderWrapper>\n        <ControlButton\n          direction='foward'\n          clickHandler={moveFoward}\n          disabled={disabled[1]}\n        />\n      </SliderWindow>\n    </>\n  );\n};\n\nexport { Slider };\n","import { makeStyles, TextField, Button } from '@material-ui/core';\nimport { deepPurple } from '@material-ui/core/colors';\nimport { useRef } from 'react';\n\nconst SearchForm = ({ onChangeQuery }) => {\n  const textFieldRef = useRef(null);\n  function handleClick() {\n    const value = textFieldRef.current.querySelector('input').value;\n    if (value.trim()) {\n      onChangeQuery(value);\n    }\n  }\n\n  const { root } = makeStyles({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: 16,\n      outline: `2px solid ${deepPurple[400]}`,\n      '& > *': {\n        margin: '0px 8px',\n      },\n    },\n  })();\n  return (\n    <form className={root}>\n      <TextField\n        ref={textFieldRef}\n        placeholder='Query'\n        variant='filled'\n        style={{ flex: 1 }}\n      />\n      <Button variant='contained' color='primary' onClick={handleClick}>\n        Search\n      </Button>\n    </form>\n  );\n};\n\nexport { SearchForm };\n","import React, { useState } from 'react';\nimport { Slider } from './Slider';\nimport { SearchForm } from './SearchForm';\nimport { makeStyles } from '@material-ui/core';\n\nconst App = () => {\n  const [query, setQuery] = useState('dog');\n\n  function onChangeQuery(query) {\n    console.log('onChangeQuery', query);\n    setQuery(query);\n  }\n\n  const { root } = makeStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      '& > * ': {\n        margin: '2rem 0px',\n      },\n    },\n  })();\n\n  return (\n    <div className={root}>\n      <SearchForm onChangeQuery={onChangeQuery} />\n      <Slider query={query} />\n    </div>\n  );\n};\n\nexport { App };\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { App } from \"./components/App\";\nimport \"./main.css\";\n\nconst root = document.getElementById(\"root\");\nrender(<App />, root);\n"],"sourceRoot":""}